<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-demo-parent</artifactId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>../sapl-demo-parent/pom.xml</relativePath>
	</parent>

	<artifactId>sapl-demo-domain</artifactId>
	<packaging>jar</packaging>

	<name>SAPL Demo Domain</name>
	
	<description>
		SAPL Demo Domain Model. This module contains a JPA-based medical 
		demo domain and demonstrates how to implement cutom handlers for 
		adivces and	obligations. 
		In addition, it also provides a demo implementation	of a basic 
		non-streaming policy information point.
	</description>

	<dependencies>
		<!-- Include the sapl-extension-api in your project if you are implementing 
			a custom Policy Information Point or function library -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-extensions-api</artifactId>
			<version>${sapl.version}</version>
		</dependency>
		<!-- To implement constraint handlers for obligations and advices which 
			are automatically discovered in a spring-boot application, the sapl-spring-security 
			is required -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-spring-security</artifactId>
			<version>${sapl.version}</version>
		</dependency>
		<!-- The demo domain is a simple JPA-based data set -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
