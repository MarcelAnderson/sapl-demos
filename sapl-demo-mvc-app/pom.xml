<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-demo-parent</artifactId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>../sapl-demo-parent/pom.xml</relativePath>
	</parent>

	<artifactId>sapl-demo-mvc-app</artifactId>
	<packaging>jar</packaging>

	<name>SAPL Demo Spring MVC Application</name>
	<description>A complete Spring Boot MVC application, demonstrating SAPL in aspect oriented programming, manual enforcement, using external data sources for policy decisions, content filtering and how to handle constraints, i.e. obligations and advice.</description>

	<dependencies>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-spring-security</artifactId>
		</dependency>
		<!-- For testing the application against a SAPL Server replace the sapl-spring-pdp-embedded 
			with sapl-spring-pdp-remote. The application.yml does contain all settings 
			to connect to a sapl-server-lt which as been started locally from source 
			using mvn spring-boot:run. However, remember that the application will require 
			the matching PDP configuration an policy deployed on the server. I.e., copy 
			the contents of the src/main/resources/policies folder to the policies folder 
			of the server. By default, the sapl-server-lt uses ~/sapl/policies or the 
			equivalent under windows. -->
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-spring-pdp-embedded</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-demo-domain</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<!-- transitive jackson dependency brings in an old guava version it 
						overrides the xtext dependencies and causes problems in JDK16+ environments -->
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
			<version>3.0.4.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Testing Dependencies -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Devtools for convenience -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
