<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- the parent sets global versions of dependencies and build configurations -->
	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-demo-parent</artifactId>
		<version>1.0.0</version>
		<relativePath>../sapl-demo-parent/pom.xml</relativePath>
	</parent>

	<artifactId>sapl-demo-jwt2</artifactId>
	<packaging>jar</packaging>

	<name>Json Web Token (JWT) Demo</name>
	<description>This demo illustrates how to create a RESTful service with JWT authentication and SAPL access control. The demo demonstrates how polices access information stored in the JWT.</description>

	<dependencies>
		<!-- SAPL spring integration -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-spring-boot-starter</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-demo-shared</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- the application domain model -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>sapl-demo-domain</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- spring boot dependencies for building RESTful services -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- use the in-ram h2 database for the demo scenario -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- project lombok to eliminate boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- this plugin allows to run the service via maven via 'mvn spring-boot:run' -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
