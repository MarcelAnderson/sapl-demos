import io.sapl.pip.ClockPolicyInformationPoint as clock
import io.sapl.functions.TemporalFunctionLibrary as time
import filter.*

set "Time-based Policies for data streams"
first-applicable
for (action == "read" & resource in ["heartBeatData", "bloodPressureData"]) | action == "readSchedulerData"


policy "Permit access to heart beat data for the fist 20 seconds of each minute"
permit
  resource == "heartBeatData"
where
  time.localSecond(<clock.ticker(CONFIG.interval)>) < 20;


policy "Permit access to blood pressure data for the last 40 seconds of each minute"
permit
  resource == "bloodPressureData"
where
  time.localSecond(<clock.ticker(CONFIG.interval)>) >= 20;


policy "permit doctor read scheduler data"
permit
  action == "readSchedulerData"
where
  "ROLE_DOCTOR" in subject..authority;
transform
  resource

policy "permit visitor read scheduler data"
permit
  action == "readSchedulerData"
where
  "ROLE_VISITOR" in subject..authority;
transform
  resource |- {
                @.name : blacken(1,0,"\u2588"),
                @.date : blacken(11,0,"\u2588")
              }

policy "permit nurse read scheduler data of doctors"
permit
  action == "readSchedulerData" & resource.title == "Dr. "
where
  "ROLE_NURSE" in subject..authority;
transform
  resource |- {
                @.date : blacken(11,0,"\u2588")
              }

policy "permit nurse read scheduler data of nurses"
permit
  action == "readSchedulerData" & resource.title != "Dr. "
where
  "ROLE_NURSE" in subject..authority;
transform
  resource
