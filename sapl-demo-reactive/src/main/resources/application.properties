# Activate the following five configuration properties if you want to use the remote PDP
# running in the PDP server (io.sapl.pdp.server.PDPServerApplication) of the SAPL policy
# engine project.
# - Note that the policy files have to be located in the folder configured for the
#   PDPServerApplication (see application.properties of sapl-pdp-server).
# - Note further that the PatientPIP located in this demo project
#   (sapl-demo-domain: org.demo.pip.PatientPIP) can then only be accessed via the
#   HTTPPolicyInformationPoint. Start the sapl-demo-pip-server: org.demo.PipServerApplication
#   to provide the required REST endpoints.
#io.sapl.pdp-type=remote
#io.sapl.remote.host=localhost
#io.sapl.remote.port=8443
#io.sapl.remote.key=YJidgyT2mfdkbmL
#io.sapl.remote.secret=Fa4zvYQdiwHZVXh

# The following five lines show the default configuration and could be omitted.
io.sapl.pdp-type=embedded
io.sapl.pdp-config-type=resources
io.sapl.resources.config-path=/policies
io.sapl.prp-type=resources
io.sapl.resources.policies-path=/policies

# Or activate the following configuration properties if you want to use PDP configuration
# and PRP accessing and monitoring policy files in the specified folders.
#io.sapl.pdp-config-type=filesystem
#io.sapl.filesystem.config-path=~/sapl/policies
#io.sapl.prp-type=filesystem
#io.sapl.filesystem.policies-path=~/sapl/policies

# The document index to be used by the Policy Retrieval Point.
# Possible values are 'simple' (default) and 'fast'.
io.sapl.index=improved

# The context path and port to use for this demo application
# (http://localhost:8080/demo)
server.servlet.context-path=/demo
server.port=8080

# Session timeout (30 minutes)
server.servlet.session.timeout=30m

# We don't want Vaadin's heart beat signal to keep the session alive.
vaadin.servlet.close-idle-sessions=true
# The session timeout should be a multiple of the heartbeat interval.
vaadin.servlet.heartbeat-interval=300

# Set the log level to TRACE to get detailed information about the
# policy engine decision process.
logging.level.io.sapl=DEBUG
logging.level.org.demo=DEBUG

# The PIP server needs to use the same in memory database as this demo application
# (they both access patient data). The demo application therefore needs to start
# it's own h2 database server on port 9090 and accessible by the PIP server (see
# configuration in DemoApplication.java).
spring.datasource.url=jdbc:h2:mem:demo-db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create
