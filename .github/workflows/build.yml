#
# Copyright Â© 2017-2021 Dominic Heutelbeck (dominic@heutelbeck.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build

on:
  workflow_dispatch:
  push:
    branches: [master]
  repository_dispatch:
    branches: [master]

jobs:
  tests:
    strategy:
      matrix:
        java: [ '17' ]
        os: [ubuntu-latest]
    name: JDK ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Web3j in case servers for releases should be unreachable
      run: |
        mkdir ~/.web3j
        mkdir ~/.web3j/solc
        cp sapl-demo-ethereum/src/main/solc/releases.json ~/.web3j/solc

    - name: Run tests
      # make sure to activate Vaadin priduction to catch potential errors during vite JS processing
      run: mvn -B package -Pproduction

    - name: Clean up local repository before caching (Linux/Mac)
      if: ${{ matrix.os != 'windows-latest'}}
      run: rm -rf ~/.m2/repository/io/sapl

    - name: Clean up local repository before caching (Win)
      if: ${{ matrix.os == 'windows-latest'}}
      run: rm -Recurse -Force ~/.m2/repository/io/sapl

  analyze:
    needs: [tests]
    name: Code Analysis, Test Coverage, Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 17
        cache: 'maven'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Web3j in case servers for releases should be unreachable
      run: |
        mkdir ~/.web3j
        mkdir ~/.web3j/solc
        cp sapl-demo-ethereum/src/main/solc/releases.json ~/.web3j/solc

    - name: Add auth-server to /etc/hosts for OAuth Integration Tests
      run: sudo sh -c 'echo "127.0.0.1 auth-server" >> /etc/hosts'
      
    - name: Build Modules
      run: mvn -B install -DskipTests -pl !:sapl-demo-testing

    - name: Build Integration Test Images
      run: mvn -B dockerfile:build -pl :sapl-demo-oauth2-jwt-authorization-server,:sapl-demo-oauth2-jwt-resource-server -P docker -DskipTests

    - name: Run analysis (JaCoCo, Sonar)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.7:report sonar:sonar failsafe:integration-test -P coverage,it -DskipITs=false -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions=**/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/* -pl !:sapl-demo-oauth2-jwt-client-application
      
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 6
        
    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl

  dockerize:
    needs: [analyze]
    name: Deliver server images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 17
        cache: 'maven'

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.8.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]
           
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build Modules
      run: mvn -B install -DskipTests -pl sapl-demo-playground -P production

    - name: Build SAPL Demo Playground Image
      run: mvn -B dockerfile:build -pl sapl-demo-playground -P docker,production -DskipTests

    - name: Push Image
      run: mvn -B dockerfile:push -pl sapl-demo-playground -P docker,production -DskipTests
        
    - name: Clean up local repository before caching 
      run: rm -rf ~/.m2/repository/io/sapl
      
