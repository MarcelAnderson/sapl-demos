logging.level.io.sapl=DEBUG
spring.profiles.default=singleapp-blocking
spring.mongodb.embedded.version=3.5.5
# distributed microservice setup with client and backend specific part
spring.profiles.group.backend-blocking-axonserver=backend,backend_blocking,axonserver,docker
spring.profiles.group.backend-async-axonserver=backend,backend_SaplCommandBus,backend_SaplQueryBus,axonserver,docker
spring.profiles.group.client-axonserver=client,axonserver,docker
# local execution as a single application with both client and backend part
spring.profiles.group.singleapp-blocking=client,backend,backend_blocking,mongodb,SaplQueryBus
spring.profiles.group.singleapp-async=client,backend,backend_SaplCommandBus,mongodb,SaplQueryBus
#---
spring.config.activate.on-profile=mongodb
spring.autoconfigure.exclude=org.axonframework.springboot.autoconfig.AxonServerAutoConfiguration
#---
spring.config.activate.on-profile=axonserver
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\
  org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\
  org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,\
  org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,\
  org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,\
  org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\
  org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration
#---
spring.config.activate.on-profile=docker
axon.axonserver.servers=axonserver
axon.serializer.events=jackson
axon.serializer.general=jackson
axon.serializer.messages=jackson

